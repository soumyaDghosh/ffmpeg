name: ffmpeg
adopt-info: ffmpeg
summary: A complete solution to record, convert and stream audio and video.
description: |
 FFmpeg is the leading multimedia framework, able to decode, encode,
 transcode, mux, demux, stream, filter and play pretty much anything that
 humans and machines have created. It supports the most obscure ancient formats
 up to the cutting edge. No matter if they were designed by some standards
 committee, the community or a corporation.

base: core22
grade: stable
confinement: strict
compression: lzo

architectures:
  - build-on: amd64
  - build-on: ppc64el
  - build-on: arm64
  - build-on: armhf

parts:
  desktop-glib-only:
    plugin: make
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: glib-only
    build-packages:
      - libglib2.0-dev
    stage-packages:
      - libglib2.0-bin
      - shared-mime-info

  nv-codec-headers:
    plugin: make
    source: https://github.com/FFmpeg/nv-codec-headers.git
    source-tag: 'n12.0.16.0'
    make-parameters:
      - PREFIX=/usr
    build-packages:
      - pkg-config
  srt:
    plugin: cmake
    source: https://github.com/Haivision/srt.git
    source-tag: 'v1.5.1'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DENABLE_LOGGING=OFF
      - -DENABLE_STATIC=OFF
    build-packages:
      - libssl-dev

  avisynth-plus:
    plugin: cmake
    source: https://github.com/AviSynth/AviSynthPlus.git
    source-tag: 'v3.7.2'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s

  x264:
    plugin: autotools
    source: https://code.videolan.org/videolan/x264.git
    source-branch: 'stable'
    autotools-configure-parameters:
      - --prefix=/usr
      - --disable-cli
      - --enable-shared
      - --enable-strip
    build-packages:
      - libva-dev
      - nasm
      
  dav1d:
    plugin: meson
    source: https://code.videolan.org/videolan/dav1d.git
    source-tag: '1.2.0'
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - --strip
      - -Denable_tools=false
      - -Denable_tests=false
    build-packages:
      - libxxhash-dev
      - meson
      - ninja-build
    stage-packages:
      - libxxhash0

  zimg:
    plugin: autotools
    source: https://github.com/sekrit-twc/zimg.git
    source-tag: 'release-3.0.4'
    autotools-configure-parameters:
      - --prefix=/usr
      
  ffmpeg:
    after:
      - avisynth-plus
      - dav1d
      - desktop-glib-only
      - nv-codec-headers
      - srt
      - x264
      - zimg
    plugin: autotools
    source: https://git.ffmpeg.org/ffmpeg.git
    source-branch: 'release/6.0'
    build-packages:
      - libaom-dev
      - flite1-dev
      - libass-dev
      - libbs2b-dev
      - libbluray-dev
      - libbz2-dev
      - libcaca-dev
      - libcdio-paranoia-dev
      - libchromaprint-dev
      - libcodec2-dev
      - libdc1394-dev
      - libdrm-dev
      - libfribidi-dev
      - libgme-dev
      - libgnutls28-dev
      - libgsm1-dev
      - liblzma-dev
      - libmp3lame-dev
      - libomxil-bellagio-dev
      - libopenal-dev
      - libopencore-amrnb-dev
      - libopencore-amrwb-dev
      - libopenjp2-7-dev
      - libopenmpt-dev
      - libopus-dev
      - libpulse-dev
      - librsvg2-dev
      - librubberband-dev
      - libsctp-dev
      - libsdl2-dev
      - libshine-dev
      - libsnappy-dev
      - libsoxr-dev
      - libspeex-dev
      - libssh-gcrypt-dev
      - libtesseract-dev
      - libtheora-dev
      - libtwolame-dev
      - libva-dev
      - libv4l-dev
      - libvdpau-dev
      - libvo-amrwbenc-dev
      - libvorbis-dev
      - libvpx-dev
      - libvulkan-dev
      - libwavpack-dev
      - libwebp-dev
      - libx265-dev
      - libxcb-shape0-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - libxml2-dev
      - libxv-dev
      - libxvidcore-dev
      - libzmq3-dev
      - libzvbi-dev
      - ocl-icd-opencl-dev
      - opencl-headers
      - pkg-config
      - yasm
      #- on amd64:
        #- libcrystalhd-dev
        # TODO: re-enable `nvidia-cuda*` if we can determine that we can ship non-free
        # - nvidia-cuda-dev
        # - nvidia-cuda-toolkit
      #- on i386:
        #- libcrystalhd-dev
    stage-packages:
      - libaom3
      - freeglut3
      - libass9
      - libbluray2
      - libbs2b0
      - libcaca0
      - libcdio-paranoia2
      - libchromaprint1
      - libcodec2-1.0
      - libdc1394-25
      - libdrm2
      - libflite1
      - libfribidi0
      - libglu1-mesa
      - libgme0
      - libgnutls30
      - libgsm1
      - libmp3lame0
      - libopenal1
      - libopencore-amrnb0
      - libopencore-amrwb0
      - libopenjp2-7
      - libopenmpt0
      - libopus0
      - libpulse0
      - librsvg2-2
      - librubberband2
      - libsdl2-2.0-0
      - libshine3
      - libslang2
      - libsnappy1v5
      - libsoxr0
      - libspeex1
      - libssh-gcrypt-4
      - libtesseract4
      - libtheora0
      - libtwolame0
      - libusb-1.0-0
      - libv4l-0
      - libv4l2rds0
      - libva-drm2
      - libva-glx2
      - libva-wayland2
      - libvdpau-va-gl1
      - libvo-amrwbenc0
      - libvorbis0a
      - libvorbisenc2
      - libvpx7
      - libvulkan1
      - libwavpack1
      - libwebp7
      - libwebpmux3
      - libx265-199
      - libx11-6
      - libxau6
      - libxcb-shape0
      - libxcb-shm0
      - libxcb-xfixes0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxml2
      - libxv1
      - libxvidcore4
      - libzmq5
      - libzvbi0
      - mesa-vdpau-drivers
      - ocl-icd-libopencl1
      - on amd64:
        - mesa-va-drivers
        #- libcrystalhd3
        # TODO: re-enable `libnpp*` if we can determine that we can ship non-free
        # - libnppig10
        # - libnppicc10
        # - libnppidei10
      - on i386:
        - mesa-va-drivers
        #- libcrystalhd3
    override-pull: |
      craftctl default
      craftctl set version="$(git describe --tags --abbrev=0 | cut -c 2-)"
    override-build: |
      if [ "$CRAFT_TARGET_ARCH" = "amd64" ]; then
        # TODO: re-enable `--enable-cuda-sdk --enable-cuda --enable-libnpp` if we can determine that we can ship non-free
        EXTRA="--enable-vdpau --enable-nvenc --enable-cuvid"
      elif [ "$CRAFT_TARGET_ARCH" = "i386" ]; then
        EXTRA="--enable-vdpau --enable-nvenc"
      elif [ "$CRAFT_TARGET_ARCH" = "armhf" ]; then
        EXTRA="--disable-vdpau --enable-neon"
      elif [ "$CRAFT_TARGET_ARCH" = "arm64" ]; then
        EXTRA="--disable-vdpau"
      else
        EXTRA=""
      fi
      ./configure \
      --prefix=/usr \
      --disable-debug \
      --disable-doc \
      --disable-static \
      --enable-libaom \
      --enable-avisynth \
      --enable-chromaprint \
      --enable-libdav1d \
      --enable-ffplay \
      --enable-gnutls \
      --enable-gpl \
      --enable-libass \
      --enable-libbluray \
      --enable-libbs2b \
      --enable-libcaca \
      --enable-libcdio \
      --enable-libcodec2 \
      --enable-libdc1394 \
      --enable-libdrm \
      --enable-libflite \
      --enable-libfontconfig \
      --enable-libfribidi \
      --enable-libfreetype \
      --enable-libgme \
      --enable-libgsm \
      --enable-libmp3lame \
      --enable-libopencore_amrnb \
      --enable-libopencore_amrwb \
      --enable-libopenjpeg \
      --enable-libopenmpt \
      --enable-libopus \
      --enable-libpulse \
      --enable-librsvg \
      --enable-librubberband \
      --enable-libshine \
      --enable-libsnappy \
      --enable-libsoxr \
      --enable-libspeex \
      --enable-libsrt \
      --enable-libssh \
      --enable-libtesseract \
      --enable-libtheora \
      --enable-libtwolame \
      --enable-libv4l2 \
      --enable-libvo_amrwbenc \
      --enable-libvorbis \
      --enable-libvpx \
      --enable-libwebp \
      --enable-libx264 \
      --enable-libx265 \
      --enable-libxcb \
      --enable-libxml2 \
      --enable-libxvid \
      --enable-libzimg \
      --enable-libzmq \
      --enable-libzvbi \
      --enable-omx \
      --enable-openal \
      --enable-opencl \
      --enable-opengl \
      --enable-runtime-cpudetect \
      --enable-sdl2 \
      --enable-shared \
      --enable-vaapi \
      --enable-version3 \
      --enable-vulkan \
      --enable-xlib ${EXTRA}
      
      # TODO: re-enable `--enable-nonfree \` if we can determine the legality/licensing issues are ok.
      
      make -j $(nproc)
      make DESTDIR="$CRAFT_PART_INSTALL" install


  cleanup:
    plugin: nil
    after: [ ffmpeg-wrapper ]
    override-prime: |
      for CRUFT in usr/share/bug usr/share/lintian usr/share/man; do
        rm -rf ${CRAFT_PRIME}/${CRUFT}
      done
      find ${CRAFT_PRIME}/usr/share/doc/ -type f -not -name 'copyright' -delete || true
      rm ${CRAFT_PRIME}/usr/share/doc/*/*.gz 2>/dev/null || true
      rm -rf ${CRAFT_PRIME}/usr/share/doc/*/examples || true
      rm ${CRAFT_PRIME}/usr/share/doc/*/README* 2>/dev/null || true
      find ${CRAFT_PRIME}/usr -type d -empty -delete || true
